/*	Richard Bennett 3/1/2016
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:
     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
*/

#include <iostream>
#include <math.h>
using namespace std;

int main() 
{
	//Variables
	int triangle = 0;
	int count = 0;
	int squareRoot;
	int factorCount = 0;
	//

	while(factorCount < 500) {
		count++;
		triangle += count;
		factorCount = 0;
		squareRoot = (int) sqrt(triangle);

		for(int i = 1; i < squareRoot; i++) {
			if(triangle % i == 0) factorCount += 2;
		}

		if(factorCount < 500) factorCount = 0;
	}

	//Print output
	cout << "\nEuler Project Problem 12" << endl;
	cout << "What is the value of the first triangle number to have over five hundred divisors?\n" << endl;
	cout << "The answer is: " << triangle << "\n" << endl;
	//
	return 0;
}
